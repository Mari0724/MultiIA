import cv2  # üì¶ Librer√≠a OpenCV ‚Üí permite leer im√°genes, dibujar texto, rect√°ngulos, etc.

# üîπ Funci√≥n que dibuja anotaciones sobre una radiograf√≠a
def draw_xray_annotation(img_path: str, is_chest: bool, prediction: str, confidence: float):
    """
    Dibuja texto sobre la radiograf√≠a dependiendo del resultado.
    
    Par√°metros:
    - img_path (str): ruta de la imagen a procesar.
    - is_chest (bool): indica si la imagen realmente es de t√≥rax.
    - prediction (str): predicci√≥n del modelo ("Normal" o "Neumonia").
    - confidence (float): nivel de confianza del modelo (0.0 a 1.0).
    
    Devuelve:
    - img: la imagen con el texto/anotaci√≥n dibujada.
    """

    #  Leemos la imagen desde la ruta usando OpenCV
    img = cv2.imread(img_path)

    #  Caso 1: la imagen NO es de t√≥rax
    if not is_chest:
        text = "NO ES TORAX ‚ùå"  # mensaje directo
        color = (0, 0, 255)      # rojo ‚Üí en formato BGR (Blue, Green, Red)

    #  Caso 2: la imagen S√ç es de t√≥rax
    else:
        # Mostramos la predicci√≥n con su confianza (ej: "Normal (0.95)")
        text = f"{prediction} ({confidence:.2f})"

        # Verde si es "Normal", rojo si es "Neumonia"
        color = (0, 255, 0) if prediction == "Normal" else (0, 0, 255)

    # üñçÔ∏è Dibujamos el texto en la parte superior de la imagen
    cv2.putText(
        img,                # imagen donde escribir
        text,               # texto a mostrar
        (20, 40),           # coordenadas (x=20, y=40) ‚Üí esquina superior izquierda
        cv2.FONT_HERSHEY_SIMPLEX,  # tipo de fuente
        1.2,                # tama√±o del texto
        color,              # color del texto (verde o rojo)
        3,                  # grosor de la l√≠nea
        cv2.LINE_AA         # suavizado de bordes (Anti-Aliasing)
    )

    #  Devolvemos la imagen ya modificada (NO se guarda aqu√≠, solo se devuelve en memoria)
    return img
